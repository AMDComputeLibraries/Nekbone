Run nekbone_kernel with OpenACC on Titan (titan.ccs.ornl.gov)

1. PGI compiler (default on Titan)
  a) load module "cudatoolkit" for OpenACC
   > module add cudatoolkit
 
  b) set correct options in trunk/src/makenek.inc
    *ftn*)    P="-r8 -Mpreprocess -fast "

  c) in trunk/test/makenek, uncommand 
    IFPGIACC="true"  

  d) in trunk/test/example1 (OpenACC only available in the example)
   > ./maknek clean
   > ./maknek 3d
   > aprun -n 1 ./nekbone

2. Cray CCE compiler 

 a) switch to CCE ompiler 
   > module switch PrgEnv-pgi PrgEnv-cray

 b) load module "craype-accel-nvidia35" for OpenACC
   >  module add  craype-accel-nvidia35

 c) set correct options in trunk/src/makenek.inc, e.g.
   *ftn*)        P="-ra -s real64 -eZ -em -Rc"

 d) in trunk/test/makenek, uncommand
    IFCRAYACC="true"                        
  
 e) in trunk/test
   > ./maknek clean
   > ./maknek 
   > aprun -n 1 ./nekbone


3.  data.rea

## maximum number of elements per proc/GPU is controlled in SIZE (parameter (lelt=400))
200  200  1 = iel0,ielN(per proc),stride ! range of number of elements per proc

## maximum polynomial order is controlled in SIZE (parameter
(lx1=16,ly1=lx1,lz1=lx1) )
16  16  1 = nx0,nxN,stride           ! poly. order range for nx1


    
            
